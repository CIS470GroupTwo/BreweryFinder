{"version":3,"sources":["public/cheers.png","public/github-logo.png","components/Brewery.js","components/BreweryList.js","components/RadioButtonContainer.js","components/BrewerySearch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Brewery","websiteUrl","react_default","a","createElement","className","target","rel","href","onMouseDown","e","preventDefault","_this$props$brewery","this","props","brewery","city","name","breweryType","brewery_type","state","street","website_url","displayWebsiteUrl","Component","BreweryList","backToSearch","breweries","searchTerm","searchParam","length","map","Brewery_Brewery","key","id","_this","_this$props","Fragment","react_typed_default","strings","typeSpeed","startDelay","backDelay","backSpeed","loop","loopCount","showCursor","type","onClick","displayResult","RadioButtonContainer","_ref","val","searchBy","handleSearchChange","identifier","tooltip","value","onChange","checked","htmlFor","data-tip","dist_default","place","BrewerySearch","search","searchFilter","showAlert","updateSearch","setState","onSearchClick","userInput","trim","handleSearch","setTimeout","onSearchChange","onCloseAlert","_this$state","src","img","alt","onSubmit","placeholder","class","role","components_RadioButtonContainer","githublogo","PAGE_HOME","PAGE_RESULTS","App","searchByParam","page","filterResults","data","filter","item","toLowerCase","includes","whatToDisplay","BreweryList_BreweryList","BrewerySearch_BrewerySearch","url","fetch","json","jsonData","cleanData","console","log","_context","t0","previousProps","previousState","_this$state2","fetchBreweryData","react","fallback","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2356148.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cheers.9fb728e3.png\";","module.exports = __webpack_public_path__ + \"static/media/github-logo.6aaf2980.png\";","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class Brewery extends Component {\r\n  displayWebsiteUrl(websiteUrl) {\r\n    return (\r\n      <a\r\n        className=\"btn btn-block\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        href={websiteUrl}\r\n        onMouseDown={e => e.preventDefault()}\r\n      >\r\n        Check Them Out\r\n      </a>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      brewery: {\r\n        city,\r\n        name,\r\n        brewery_type: breweryType,\r\n        state,\r\n        street,\r\n        website_url: websiteUrl\r\n      }\r\n    } = this.props\r\n\r\n    return (\r\n      <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\r\n        <div className=\"card h-100\">\r\n          <div className=\"card-body flex-column h-100\">\r\n            <h5 className=\"Kreon-Text text-capitalize\">{name}</h5>\r\n            <h6 className=\"text-capitalize\">\r\n              <strong>Type: </strong>\r\n              {breweryType}\r\n            </h6>\r\n            <h6 className=\"text-capitalize\">{street}</h6>\r\n            <h6 className=\"text-capitalize\">\r\n              {city}, {state}\r\n            </h6>\r\n            {this.displayWebsiteUrl(websiteUrl)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nBrewery.propTypes = {\r\n  brewery: PropTypes.objectOf(PropTypes.any).isRequired\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Typed from 'react-typed'\r\nimport Brewery from './Brewery'\r\n\r\nexport default class BreweryList extends Component {\r\n  onClick() {\r\n    const { backToSearch } = this.props\r\n    backToSearch()\r\n  }\r\n\r\n  displayResult(breweries, searchTerm, searchParam) {\r\n    if (!breweries.length) {\r\n      return (\r\n        <h1 className=\"Kreon-Text text-center\">\r\n          Sorry, no results found for {searchTerm} within the {searchParam}{' '}\r\n          filter.\r\n        </h1>\r\n      )\r\n    }\r\n    return breweries.map(brewery => {\r\n      return <Brewery key={brewery.id} brewery={brewery} />\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { breweries, searchTerm, searchParam } = this.props\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"mb-3\">\r\n          <nav className=\"navbar\">\r\n            <Typed\r\n              strings={['Time to drink', 'Time to party', 'Time to relax']}\r\n              typeSpeed={70}\r\n              startDelay={1200}\r\n              backDelay={3000}\r\n              backSpeed={60}\r\n              loop\r\n              loopCount={30}\r\n              showCursor\r\n              className=\"h4 mx-auto Quicksand-Text\"\r\n            />\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-info back-btn\"\r\n                onClick={() => this.onClick()}\r\n              >\r\n                Back to Search\r\n              </button>\r\n            </form>\r\n          </nav>\r\n        </div>\r\n\r\n        <div className=\"container my-5\">\r\n          <div className=\"row\">\r\n            {this.displayResult(breweries, searchTerm, searchParam)}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nBreweryList.propTypes = {\r\n  breweries: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  searchTerm: PropTypes.string.isRequired,\r\n  searchParam: PropTypes.string.isRequired,\r\n  backToSearch: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport PropTypes from 'prop-types'\r\nimport '../App.css'\r\n\r\nconst RadioButtonContainer = ({\r\n  val,\r\n  searchBy,\r\n  handleSearchChange,\r\n  identifier,\r\n  tooltip\r\n}) => {\r\n  return (\r\n    <div className=\"form-check form-check-inline\">\r\n      <input\r\n        className=\"form-check-input radio-button\"\r\n        type=\"radio\"\r\n        name=\"searchByOptions\"\r\n        id={identifier}\r\n        value={val}\r\n        onChange={handleSearchChange}\r\n        checked={searchBy === val}\r\n      />\r\n      <label\r\n        className=\"form-check-label text-capitalize\"\r\n        htmlFor={identifier}\r\n        data-tip={tooltip}\r\n      >\r\n        {val}\r\n      </label>\r\n      <ReactTooltip place=\"bottom\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nRadioButtonContainer.propTypes = {\r\n  val: PropTypes.string.isRequired,\r\n  tooltip: PropTypes.string.isRequired,\r\n  handleSearchChange: PropTypes.func.isRequired,\r\n  searchBy: PropTypes.string.isRequired,\r\n  identifier: PropTypes.string.isRequired\r\n}\r\n\r\nexport default RadioButtonContainer\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Typed from 'react-typed'\r\nimport RadioButtonContainer from './RadioButtonContainer'\r\nimport img from '../public/cheers.png'\r\nimport githublogo from '../public/github-logo.png'\r\n\r\nexport default class BrewerySearch extends Component {\r\n  state = {\r\n    search: '',\r\n    searchFilter: 'city',\r\n    showAlert: false\r\n  }\r\n\r\n  updateSearch = e => {\r\n    this.setState({ search: e.target.value })\r\n  }\r\n\r\n  onSearchClick = e => {\r\n    const { search } = this.state\r\n    const userInput = search.trim()\r\n    const { handleSearch } = this.props\r\n    if (userInput) {\r\n      handleSearch(userInput)\r\n    } else {\r\n      this.setState({ showAlert: true })\r\n      setTimeout(() => {\r\n        this.setState({ showAlert: false })\r\n      }, 1500)\r\n    }\r\n    e.preventDefault()\r\n  }\r\n\r\n  onSearchChange = e => {\r\n    const { searchBy } = this.props\r\n    this.setState({ searchFilter: e.target.value })\r\n    searchBy(e.target.value)\r\n  }\r\n\r\n  onCloseAlert = () => {\r\n    this.setState({ showAlert: false })\r\n  }\r\n\r\n  render() {\r\n    const { searchFilter, showAlert } = this.state\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h1 className=\"Quicksand-Text Glow text-center\">\r\n                <img src={img} className=\"vector-img\" alt=\"beer-vector\" />{' '}\r\n                <span className=\"underline\">Brew</span>ery Finder\r\n              </h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col text-center mb-5\">\r\n              <Typed\r\n                strings={[\r\n                  'Find a brewery in your hometown',\r\n                  'Find your new hangout',\r\n                  'Find your new favorite beer',\r\n                  'Find the answer to your problems'\r\n                ]}\r\n                typeSpeed={70}\r\n                startDelay={1200}\r\n                backDelay={3000}\r\n                backSpeed={60}\r\n                loop\r\n                loopCount={30}\r\n                showCursor\r\n                className=\"typing-text\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-09 mx-auto col-md-8 mt-6 text-center\">\r\n              <h2 className=\"text-capitalize\">\r\n                search for breweries by {searchFilter}\r\n              </h2>\r\n              <form className=\"form input-group\" onSubmit={this.onSearchClick}>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search here...\"\r\n                  id=\"search-bar\"\r\n                  onChange={this.updateSearch}\r\n                />\r\n                <button type=\"submit\" className=\"btn mx-2 search-btn\">\r\n                  Search\r\n                </button>\r\n              </form>\r\n              {showAlert && (\r\n                <div class=\"alert alert-danger\" role=\"alert\">\r\n                  A search value is required\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"radio-button form-check-inline\">\r\n              <RadioButtonContainer\r\n                val=\"city\"\r\n                searchBy={searchFilter}\r\n                handleSearchChange={this.onSearchChange}\r\n                identifier=\"cityRadio\"\r\n                tooltip=\"Search by city\"\r\n              />\r\n              <RadioButtonContainer\r\n                val=\"state\"\r\n                searchBy={searchFilter}\r\n                handleSearchChange={this.onSearchChange}\r\n                identifier=\"stateRadio\"\r\n                tooltip=\"Search by state\"\r\n              />\r\n              <RadioButtonContainer\r\n                val=\"name\"\r\n                searchBy={searchFilter}\r\n                handleSearchChange={this.onSearchChange}\r\n                identifier=\"nameRadio\"\r\n                tooltip=\"Search by brewery name\"\r\n              />\r\n              <RadioButtonContainer\r\n                val=\"type\"\r\n                searchBy={searchFilter}\r\n                handleSearchChange={this.onSearchChange}\r\n                identifier=\"typeRadio\"\r\n                tooltip=\"Types: micro, regional, brewpub, large, planning, bar, contract, proprietor\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer className=\"mx-auto py-3\">\r\n          <div className=\"container text-center\">\r\n            <a\r\n              href=\"https://github.com/JasonFritsche/BreweryFinder\"\r\n              className=\"d-block\"\r\n              target=\"_blank\"\r\n            >\r\n              Contribute <img src={githublogo} id=\"logo\" alt=\"github-logo\" />\r\n            </a>\r\n            Powered By{' '}\r\n            <span className=\"text-muted\">\r\n              <a\r\n                href=\"https://www.openbrewerydb.org/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Open Brewery DB\r\n              </a>\r\n            </span>\r\n          </div>\r\n        </footer>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nBrewerySearch.propTypes = {\r\n  handleSearch: PropTypes.func.isRequired,\r\n  searchBy: PropTypes.func.isRequired\r\n}\r\n","import React, { Component, Suspense } from 'react'\r\nimport './App.css'\r\nimport BreweryList from './components/BreweryList'\r\nimport BrewerySearch from './components/BrewerySearch'\r\n\r\nconst PAGE_HOME = 'home'\r\nconst PAGE_RESULTS = 'search_results'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    breweries: [],\r\n    searchTerm: 'Boston',\r\n    searchByParam: 'city',\r\n    page: PAGE_HOME\r\n  }\r\n\r\n  backToSearch = () => {\r\n    this.setState({\r\n      searchByParam: 'city',\r\n      page: PAGE_HOME\r\n    })\r\n  }\r\n\r\n  async fetchBreweryData(searchTerm, searchByParam) {\r\n    try {\r\n      const url = `https://api.openbrewerydb.org/breweries?by_${searchByParam}=${searchTerm}`\r\n      const data = await fetch(url)\r\n      const jsonData = await data.json()\r\n      const cleanData = this.filterResults(jsonData)\r\n      this.setState({\r\n        breweries: cleanData\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  // searchTerm is the value from the input/search bar\r\n  handleSearch = searchTerm => {\r\n    this.setState({\r\n      searchTerm,\r\n      page: PAGE_RESULTS\r\n    })\r\n  }\r\n\r\n  searchBy = e => {\r\n    this.setState({\r\n      searchByParam: e\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    const { searchTerm, searchByParam } = this.state\r\n    const searchChanged = searchTerm !== previousState.searchTerm\r\n    if (searchChanged) {\r\n      this.fetchBreweryData(searchTerm, searchByParam)\r\n    }\r\n  }\r\n\r\n  // Exclude breweries that contains \"Brewery In Planning\"\r\n  filterResults = data =>\r\n    data.filter(\r\n      item =>\r\n        !item.name.toLowerCase().includes('brewery in planning')\r\n    )\r\n\r\n  whatToDisplay = page => {\r\n    const { breweries, searchTerm, searchByParam } = this.state\r\n    if (page === PAGE_RESULTS) {\r\n      return (\r\n        <BreweryList\r\n          breweries={breweries}\r\n          backToSearch={this.backToSearch}\r\n          searchTerm={searchTerm}\r\n          searchParam={searchByParam}\r\n        />\r\n      )\r\n    }\r\n    return (\r\n      <BrewerySearch\r\n        handleSearch={this.handleSearch}\r\n        searchBy={this.searchBy}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { page } = this.state\r\n    return (\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        {this.whatToDisplay(page)}\r\n      </Suspense>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}